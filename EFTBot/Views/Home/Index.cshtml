@using EFTBot.Data.Classes
@using EFTBot.Models.EFT.RequestModels.Trading.Market
@model EFTBot.Models.Server.Home.IndexModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <div class="row">
        <div class="col-lg-6 float-left">
            <span class="float-left">Requests Currently Sent: @Model.CurrentRequests</span>
        </div>
        <div class="col-lg-6 float-right">
            <span class="float-right">Current Roubles: &#8381 @Model.CurrentRoubles</span>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-6">
            <table class="table table-hover table-dark">
                <thead>
                    <tr>
                        <th scope="col">Id</th>
                        <th scope="col">Item Name</th>
                        <th scope="col">Price</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        if (Model.ItemPrices != null)
                        {
                            foreach (var valuableItem in Model.ItemsToLookFor)
                            {
                                var itemPrice = Model.ItemPrices.FirstOrDefault(ip => ip.Id == valuableItem.Key);
                                <tr>
                                    <th scope="row">@itemPrice.Id</th>
                                    <td>@valuableItem.Value</td>
                                    <td>@($"{itemPrice.Price:n0}")</td>
                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>
        </div>

        <div class="col-lg-6">
            <canvas id="myChart" width="400" height="400"></canvas>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.4.1.min.js"
            integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo="
            crossorigin="anonymous"></script>
    <script src="~/js/Chart.bundle.min.js"></script>
    <script>
        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx,
            {
                type: 'bar',
                    data: {
                        labels: [
                            @Html.Raw(string.Join(", ", Model.ProfitEveryHour.Select(cp => $"'{cp.CurrentTime:MM/dd/yyyy HH:mm}'")))
                        ],
                        datasets: [
                            {
                                label: 'Current Profit Every Hour',
                                data: [@(string.Join(", ", Model.ProfitEveryHour.Select(cp => cp.CurrentProfit)))],
                                backgroundColor: [
                                    'rgba(255, 99, 132, 0.2)',
                                    'rgba(54, 162, 235, 0.2)',
                                    'rgba(255, 206, 86, 0.2)',
                                    'rgba(75, 192, 192, 0.2)',
                                    'rgba(153, 102, 255, 0.2)',
                                    'rgba(255, 159, 64, 0.2)'
                                ],
                                borderColor: [
                                    'rgba(255, 99, 132, 1)',
                                    'rgba(54, 162, 235, 1)',
                                    'rgba(255, 206, 86, 1)',
                                    'rgba(75, 192, 192, 1)',
                                    'rgba(153, 102, 255, 1)',
                                    'rgba(255, 159, 64, 1)'
                                ],
                                borderWidth: 1
                            }
                        ]
                    },
                    options: {
                        scales: {
                            yAxes: [
                                {
                                    ticks: {
                                        beginAtZero: true
                                    }
                                }
                            ]
                        }
                    }
                });

            setTimeout(() => {
                location.reload();
            }, 5000);
    </script>
</div>
